<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>AI Food Assistant</title>
    <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    <style>
        body {
            font-family: 'Poppins', sans-serif;
            background: linear-gradient(135deg, #f6f8fd 0%, #f1f4f9 100%);
        }
        .upload-zone {
            transition: all 0.3s ease;
        }
        .upload-zone:hover {
            border-color: #4f46e5;
            background-color: #f8fafc;
        }
        .upload-zone.dragover {
            border-color: #4f46e5;
            background-color: #eef2ff;
            transform: scale(1.02);
        }
        .btn-primary {
            background: linear-gradient(135deg, #4f46e5 0%, #6366f1 100%);
            transition: all 0.3s ease;
        }
        .btn-primary:hover {
            transform: translateY(-1px);
            box-shadow: 0 4px 12px rgba(79, 70, 229, 0.2);
        }
        .preview-container {
            transition: all 0.3s ease;
        }
        @keyframes fadeIn {
            from { opacity: 0; transform: translateY(10px); }
            to { opacity: 1; transform: translateY(0); }
        }
        .fade-in {
            animation: fadeIn 0.5s ease forwards;
        }
        .history-card {
            transition: all 0.3s ease;
        }
        .history-card:hover {
            transform: translateY(-2px);
            box-shadow: 0 8px 16px rgba(0, 0, 0, 0.1);
        }
    </style>
</head>
<body class="min-h-screen">
    <div class="container mx-auto px-4 py-12">
        <div class="max-w-6xl mx-auto">
            <div class="text-center mb-12">
                <h1 class="text-5xl font-bold text-gray-800 mb-4">AI Food Assistant</h1>
                <p class="text-lg text-gray-600">Upload a food image and let our AI analyze it for you</p>
            </div>
            
            <div class="grid grid-cols-1 lg:grid-cols-2 gap-8">
                <!-- Upload Section -->
                <div class="bg-white rounded-2xl shadow-xl p-8 transform transition-all duration-300 hover:shadow-2xl">
                    <form action="/upload" method="POST" enctype="multipart/form-data" class="space-y-8">
                        <div class="upload-zone border-3 border-dashed border-gray-300 rounded-xl p-8 text-center cursor-pointer">
                            <div class="space-y-6">
                                <div class="relative">
                                    <svg class="mx-auto h-16 w-16 text-indigo-500" stroke="currentColor" fill="none" viewBox="0 0 48 48">
                                        <path d="M28 8H12a4 4 0 00-4 4v20m32-12v8m0 0v8a4 4 0 01-4 4H12a4 4 0 01-4-4v-4m32-4l-3.172-3.172a4 4 0 00-5.656 0L28 28M8 32l9.172-9.172a4 4 0 015.656 0L28 28m0 0l4 4m4-24h8m-4-4v8m-12 4h.02" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" />
                                    </svg>
                                    <div class="absolute inset-0 flex items-center justify-center">
                                        <div class="w-16 h-16 bg-indigo-100 rounded-full opacity-50"></div>
                                    </div>
                                </div>
                                <div class="space-y-2">
                                    <label for="food-image" class="btn-primary inline-block px-6 py-3 rounded-lg text-white font-semibold cursor-pointer">
                                        Choose an image
                                    </label>
                                    <input id="food-image" name="food-image" type="file" accept="image/*" class="hidden" onchange="previewImage(event)">
                                    <p class="text-sm text-gray-500">or drag and drop your food image here</p>
                                    <p class="text-xs text-gray-400">Supports JPG, JPEG, and PNG</p>
                                </div>
                            </div>
                        </div>
                        
                        <div id="image-preview" class="hidden preview-container fade-in">
                            <div class="relative rounded-xl overflow-hidden shadow-lg">
                                <img id="preview" class="w-full h-auto" alt="Preview">
                                <div class="absolute inset-0 bg-gradient-to-t from-black/50 to-transparent opacity-0 hover:opacity-100 transition-opacity duration-300">
                                    <div class="absolute bottom-4 left-4 text-white">
                                        <p class="text-sm font-medium">Click to change image</p>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="flex justify-center">
                            <button type="submit" class="btn-primary px-8 py-4 rounded-lg text-white font-semibold text-lg flex items-center space-x-2">
                                <span>Analyze Food</span>
                                <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 7l5 5m0 0l-5 5m5-5H6" />
                                </svg>
                            </button>
                        </div>
                    </form>
                </div>

                <!-- History Section -->
                <div class="bg-white rounded-2xl shadow-xl p-8">
                    <div class="flex justify-between items-center mb-6">
                        <h2 class="text-2xl font-semibold text-gray-800">Analysis History</h2>
                        <button class="text-indigo-500 hover:text-indigo-600 text-sm font-medium flex items-center space-x-1">
                            <span>Clear All</span>
                            <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16" />
                            </svg>
                        </button>
                    </div>

                    <div class="space-y-4 max-h-[600px] overflow-y-auto pr-2">
                        <% if (typeof history !== 'undefined' && history && history.length > 0) { %>
                            <% history.forEach(item => { %>
                                <div class="history-card bg-gray-50 rounded-xl p-4 flex items-start space-x-4">
                                    <img src="/uploads/<%= item.filename %>" alt="<%= item.foodName %>" class="w-20 h-20 rounded-lg object-cover">
                                    <div class="flex-1">
                                        <div class="flex justify-between items-start">
                                            <div>
                                                <h3 class="font-medium text-gray-800"><%= item.foodName %></h3>
                                                <p class="text-sm text-gray-500">Analyzed <%= new Date(item.timestamp).toLocaleString() %></p>
                                            </div>
                                            <span class="px-2 py-1 <%= item.healthStatus === 'Healthy' ? 'bg-green-100 text-green-800' : 'bg-yellow-100 text-yellow-800' %> text-xs rounded-full">
                                                <%= item.healthStatus %>
                                            </span>
                                        </div>
                                        <p class="text-sm text-gray-600 mt-2">
                                            Calories: <%= item.nutrition.calories %> | 
                                            Protein: <%= item.nutrition.protein %>g | 
                                            Carbs: <%= item.nutrition.carbs %>g
                                        </p>
                                    </div>
                                </div>
                            <% }); %>
                        <% } else { %>
                            <div class="text-center py-8 text-gray-500">
                                <svg class="mx-auto h-12 w-12 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M20 13V6a2 2 0 00-2-2H6a2 2 0 00-2 2v7m16 0v5a2 2 0 01-2 2H6a2 2 0 01-2-2v-5m16 0h-2.586a1 1 0 00-.707.293l-2.414 2.414a1 1 0 01-.707.293h-3.172a1 1 0 01-.707-.293l-2.414-2.414A1 1 0 006.586 13H4" />
                                </svg>
                                <p class="mt-2">No analysis history yet</p>
                                <p class="text-sm">Upload an image to see your analysis history here</p>
                            </div>
                        <% } %>
                    </div>
                </div>
            </div>

            <div class="mt-8 text-center text-sm text-gray-500">
                <p>Your privacy is important to us. Images are processed securely and deleted after analysis.</p>
            </div>
        </div>
    </div>

    <script>
        function previewImage(event) {
            const preview = document.getElementById('preview');
            const previewContainer = document.getElementById('image-preview');
            const file = event.target.files[0];
            
            if (file) {
                const reader = new FileReader();
                reader.onload = function(e) {
                    preview.src = e.target.result;
                    previewContainer.classList.remove('hidden');
                    previewContainer.classList.add('fade-in');
                }
                reader.readAsDataURL(file);
            }
        }

        // Drag and drop functionality
        const dropZone = document.querySelector('.upload-zone');
        
        ['dragenter', 'dragover', 'dragleave', 'drop'].forEach(eventName => {
            dropZone.addEventListener(eventName, preventDefaults, false);
        });

        function preventDefaults(e) {
            e.preventDefault();
            e.stopPropagation();
        }

        ['dragenter', 'dragover'].forEach(eventName => {
            dropZone.addEventListener(eventName, highlight, false);
        });

        ['dragleave', 'drop'].forEach(eventName => {
            dropZone.addEventListener(eventName, unhighlight, false);
        });

        function highlight(e) {
            dropZone.classList.add('dragover');
        }

        function unhighlight(e) {
            dropZone.classList.remove('dragover');
        }

        dropZone.addEventListener('drop', handleDrop, false);

        function handleDrop(e) {
            const dt = e.dataTransfer;
            const files = dt.files;
            const input = document.getElementById('food-image');
            input.files = files;
            
            const event = new Event('change');
            input.dispatchEvent(event);
        }

        // Add click handler for the preview image
        document.getElementById('image-preview')?.addEventListener('click', () => {
            document.getElementById('food-image').click();
        });

        // Handle form submission
        document.querySelector('form').addEventListener('submit', async (e) => {
            e.preventDefault();
            const formData = new FormData(e.target);
            
            try {
                const response = await fetch('/upload', {
                    method: 'POST',
                    body: formData
                });
                
                const result = await response.json();
                
                if (response.ok) {
                    // Reload the page to show updated history
                    window.location.reload();
                } else {
                    alert('Error: ' + result.error);
                }
            } catch (error) {
                console.error('Upload error:', error);
                alert('Error uploading image. Please try again.');
            }
        });

        // Handle clear history
        document.querySelector('button[class*="text-indigo-500"]').addEventListener('click', async () => {
            if (confirm('Are you sure you want to clear all history?')) {
                try {
                    const response = await fetch('/clear-history', {
                        method: 'POST'
                    });
                    
                    const result = await response.json();
                    
                    if (response.ok) {
                        window.location.reload();
                    } else {
                        alert('Error: ' + result.error);
                    }
                } catch (error) {
                    console.error('Clear history error:', error);
                    alert('Error clearing history. Please try again.');
                }
            }
        });
    </script>
</body>
</html> 